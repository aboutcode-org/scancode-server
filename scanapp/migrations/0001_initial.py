# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-07-14 03:31
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CeleryScan',
            fields=[
                ('scan_id', models.AutoField(primary_key=True, serialize=False)),
                ('scan_results', models.CharField(blank=True, max_length=20000, null=True)),
                ('is_complete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CodeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_code_files', models.IntegerField(blank=True, null=True)),
                ('code_size', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Copyright',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_line', models.IntegerField()),
                ('end_line', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CopyrightAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=200)),
                ('copyright', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.Copyright')),
            ],
        ),
        migrations.CreateModel(
            name='CopyrightHolders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holder', models.CharField(max_length=400)),
                ('copyright', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.Copyright')),
            ],
        ),
        migrations.CreateModel(
            name='CopyrightStatements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement', models.CharField(max_length=500)),
                ('copyright', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.Copyright')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=1000)),
                ('start_line', models.IntegerField()),
                ('spdx_url', models.URLField(max_length=2000)),
                ('text_url', models.URLField(max_length=2000)),
                ('spdx_license_key', models.CharField(max_length=200)),
                ('homepage_url', models.URLField(max_length=2000)),
                ('score', models.IntegerField()),
                ('end_line', models.IntegerField()),
                ('key', models.CharField(max_length=200)),
                ('owner', models.CharField(max_length=500)),
                ('dejacode_url', models.URLField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='LocalScanInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MatchedRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_choice', models.BooleanField()),
                ('identifier', models.CharField(max_length=200)),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.License')),
            ],
        ),
        migrations.CreateModel(
            name='MatchedRuleLicenses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license', models.CharField(max_length=200)),
                ('matched_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.MatchedRule')),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='ScanError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_error', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='ScanFileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='ScanInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_type', models.CharField(choices=[('URL', 'URL'), ('Local Scan', 'localscan')], default='URL', max_length=20)),
                ('is_complete', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ScanResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanned_json_result', django.contrib.postgres.fields.jsonb.JSONField()),
                ('scanned_html_result', models.CharField(max_length=10000)),
                ('scancode_notice', models.CharField(max_length=2000)),
                ('scancode_version', models.CharField(max_length=200)),
                ('files_count', models.IntegerField(blank=True, default=0, null=True)),
                ('total_errors', models.IntegerField(blank=True, default=0, null=True)),
                ('scan_time', models.IntegerField(blank=True, default=0, null=True)),
                ('code_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.CodeInfo')),
            ],
        ),
        migrations.CreateModel(
            name='URLScanInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('URL', models.URLField(max_length=2000)),
                ('scan_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanInfo')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanInfo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='scanfileinfo',
            name='scan_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanResult'),
        ),
        migrations.AddField(
            model_name='scanerror',
            name='scan_file_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanFileInfo'),
        ),
        migrations.AddField(
            model_name='package',
            name='scan_file_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanFileInfo'),
        ),
        migrations.AddField(
            model_name='localscaninfo',
            name='scan_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanInfo'),
        ),
        migrations.AddField(
            model_name='license',
            name='scan_file_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanFileInfo'),
        ),
        migrations.AddField(
            model_name='copyright',
            name='scan_file_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanFileInfo'),
        ),
        migrations.AddField(
            model_name='codeinfo',
            name='scan_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanapp.ScanInfo'),
        ),
    ]
